{"version":3,"file":"static/js/857.cffc14fb.chunk.js","mappings":"mPAEaA,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yIAUpBC,EAASH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8TAkBlBG,EAAWL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mJ,8IC3BnBK,EAAqB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SAC7BC,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,KAACb,EAAAA,GAAQ,CAAAc,SACNJ,EAASK,KAAI,SAAAC,GACZ,OACEH,EAAAA,EAAAA,KAACT,EAAAA,GAAM,CAAAU,UACLG,EAAAA,EAAAA,MAACC,EAAAA,KAAI,CAACC,GAAI,WAAaH,EAAQI,GAAIC,MAAO,CAAEC,KAAMX,GAAWG,SAAA,EAC3DD,EAAAA,EAAAA,KAAA,OAAKU,IARF,kCAQgBP,EAAQQ,YAAaC,IAAKT,EAAQU,SACrDb,EAAAA,EAAAA,KAACP,EAAAA,GAAQ,CAAAQ,SAAEE,EAAQU,YAHVV,EAAQI,GAOzB,KAGN,E,kBCjBe,SAASO,IACtB,IAAAC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAgBhC,OAdAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,eAAA1B,GAAA2B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEUC,EAAAA,EAAAA,MAAsB,KAAD,GAApCJ,EAAMC,EAAAI,MACDC,QACTZ,EAAcM,GACfC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEDO,QAAQC,IAAGR,EAAAM,IAAQ,yBAAAN,EAAAS,OAAA,GAAAX,EAAA,kBAEtB,kBATW,OAAA7B,EAAAyC,MAAA,KAAAC,UAAA,KAUZhB,GACF,GAAG,KAGDlB,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,qBACJD,EAAAA,EAAAA,KAACL,EAAkB,CAACE,SAAUsB,MAGpC,C","sources":["components/TrendingMoviesList/TrendingMoviesList.styled.js","components/TrendingMoviesList/TrendingMoviesList.js","pages/HomePage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin: 0px;\n  padding: 0px;\n  list-style: none;\n`;\n\nexport const FilmLi = styled.li`\n  margin-left: 50px;\n  margin-top: 24px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s;\n  width: 300px;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const FilmName = styled.p`\n  text-decoration: none;\n  font-size: 16px;\n  margin-top: 12px;\n  color: rgb(17, 17, 17);\n  font-weight: 500;\n  text-align: center;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { FilmLi, FilmList, FilmName } from './TrendingMoviesList.styled';\n\nexport const TrendingMoviesList = ({ elements }) => {\n  const location = useLocation();\n  const imgUrl = 'https://image.tmdb.org/t/p/w300';\n\n  return (\n    <FilmList>\n      {elements.map(element => {\n        return (\n          <FilmLi key={element.id}>\n            <Link to={'/movies/' + element.id} state={{ from: location }}>\n              <img src={imgUrl + element.poster_path} alt={element.title} />\n              <FilmName>{element.title}</FilmName>\n            </Link>\n          </FilmLi>\n        );\n      })}\n    </FilmList>\n  );\n};\n","import { TrendingMoviesList } from 'components/TrendingMoviesList/TrendingMoviesList';\nimport { fetchTrendingMovies } from '../components/api';\nimport { useEffect, useState } from 'react';\n\nexport default function HomePage() {\n  const [moviesList, setMoviesList] = useState([]);\n\n  useEffect(() => {\n    const result = async () => {\n      try {\n        const movies = await fetchTrendingMovies();\n        if (movies.length) {\n          setMoviesList(movies);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    result();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending Movies</h1>\n      <TrendingMoviesList elements={moviesList} />\n    </div>\n  );\n}\n"],"names":["FilmList","styled","_templateObject","_taggedTemplateLiteral","FilmLi","_templateObject2","FilmName","_templateObject3","TrendingMoviesList","_ref","elements","location","useLocation","_jsx","children","map","element","_jsxs","Link","to","id","state","from","src","poster_path","alt","title","HomePage","_useState","useState","_useState2","_slicedToArray","moviesList","setMoviesList","useEffect","result","_asyncToGenerator","_regeneratorRuntime","_callee","movies","_context","prev","next","fetchTrendingMovies","sent","length","t0","console","log","stop","apply","arguments"],"sourceRoot":""}